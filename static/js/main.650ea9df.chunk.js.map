{"version":3,"sources":["Components/Button/Button.jsx","Components/Select/Select.jsx","Components/GoodList/GoodsList.jsx","App.js","index.js"],"names":["React","memo","action","text","type","onClick","Select","state","maxGoodsLength","arrayOption","i","push","name","value","this","onChange","event","setState","target","props","takeChildrenState","map","number","index","key","PureComponent","GoodsList","sortBy","isReverse","steteResult","reverseGoods","sortByLength","sortByABC","clearGoods","newArrayOfGoods","allGoods","filter","goods","length","sort","firsGoods","nextGoods","localeCompare","reverse","good","goodsFromServer","App","isActive","showUI","cleanGoods","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAYeA,G,MAAAA,IAAMC,MATN,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OACb,4BAAQC,KAAK,SAASC,QAASH,GAASC,OCmC3BG,E,4MAnCbC,MAAQ,CACNC,eAAgB,G,4CAGlB,WAIE,IAJQ,IAAD,OAEDC,EAAc,GAEXC,EAAI,EAAGA,GAHE,GAGcA,GAAK,EACnCD,EAAYE,KAAKD,GAGnB,OACE,4BACEE,KAAK,SACLC,MAAOC,KAAKP,MAAMC,eAClBO,SAAU,SAACC,GACT,EAAKC,SAAS,CAAET,gBAAiBQ,EAAME,OAAOL,QAC5C,kBAAM,EAAKM,MAAMC,kBAAkB,EAAKb,MAAMC,qBAGjDC,EAAYY,KAAI,SAACC,EAAQC,GAAT,OACf,4BAAQC,IAAG,UAAKF,EAAL,YAAuBT,MAAOU,EAAQ,GAC9CD,W,GAxBQtB,IAAMyB,eCwEZC,E,4MArEbnB,MAAQ,CACNoB,OAAQ,KACRC,WAAW,EACXpB,eAAgB,G,EAGlBY,kBAAoB,SAACS,GACnB,EAAKZ,SAAS,CAAET,eAAgBqB,K,EAGlCC,aAAe,WACb,EAAKb,UAAS,SAAAV,GAAK,MAAK,CAAEqB,WAAYrB,EAAMqB,e,EAG9CG,aAAe,WACb,EAAKd,SAAS,CAAEU,OAAQ,Y,EAG1BK,UAAY,WACV,EAAKf,SAAS,CAAEU,OAAQ,S,EAG1BM,WAAa,WACX,EAAKhB,SAAS,CACZW,WAAW,EACXD,OAAQ,M,4CAIZ,WAAU,IAAD,OAGDO,EAFepB,KAAKK,MAAlBgB,SAEyBC,QAAO,SAAAC,GAAK,OAC3CA,EAAMC,OAAS,EAAK/B,MAAMC,kBAiB5B,OAdA0B,EAAgBK,MAAK,SAACC,EAAWC,GAC/B,OAAQ,EAAKlC,MAAMoB,QACjB,IAAK,SACH,OAAOa,EAAUF,OAASG,EAAUH,OACtC,IAAK,MACH,OAAOE,EAAUE,cAAcD,GACjC,QAAS,OAAO,MAIhB3B,KAAKP,MAAMqB,WACbM,EAAgBS,UAIhB,oCACE,4BACGT,EAAgBb,KAAI,SAAAuB,GAAI,OAAI,wBAAIpB,IAAKoB,GAAOA,OAE/C,kBAAC,EAAD,CAAQ1C,OAAQY,KAAKiB,aAAc5B,KAAK,mBACxC,kBAAC,EAAD,CAAQD,OAAQY,KAAKkB,UAAW7B,KAAK,iBACrC,kBAAC,EAAD,CAAQD,OAAQY,KAAKmB,WAAY9B,KAAK,UACtC,kBAAC,EAAD,CAAQD,OAAQY,KAAKgB,aAAc3B,KAAK,YACxC,kBAAC,EAAD,CAAQK,eAAgBM,KAAKP,MAAMC,eAAgBY,kBAAmBN,KAAKM,yB,GA5D3DpB,IAAMyB,eCAxBoB,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCaC,E,4MA7BbvC,MAAQ,CACNwC,UAAU,EACVZ,SAAS,GAAD,OAAMU,I,EAGhBG,OAAS,WACP,EAAK/B,UAAS,SAAAV,GAAK,MAAK,CAAEwC,UAAWxC,EAAMwC,c,4CAG7C,WACE,MAAmDjC,KAAKP,MAAhDwC,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,SAAUR,EAA5B,EAA4BA,OAAQsB,EAApC,EAAoCA,WAEpC,OACE,qCACIF,GACG,4BAAQ3C,KAAK,SAASC,QAASS,KAAKkC,QAApC,SACJD,GAEC,kBAAC,EAAD,CACEZ,SAAUA,EACVR,OAAQA,EACRsB,WAAYA,S,GAtBNjD,IAAMkD,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.650ea9df.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ action, text }) => (\n  <button type=\"button\" onClick={action}>{text}</button>\n);\n\nButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Button);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.PureComponent {\n  state = {\n    maxGoodsLength: 1,\n  }\n\n  render() {\n    const maxOption = 10;\n    const arrayOption = [];\n\n    for (let i = 1; i <= maxOption; i += 1) {\n      arrayOption.push(i);\n    }\n\n    return (\n      <select\n        name=\"number\"\n        value={this.state.maxGoodsLength}\n        onChange={(event) => {\n          this.setState({ maxGoodsLength: +event.target.value },\n            () => this.props.takeChildrenState(this.state.maxGoodsLength));\n        }}\n      >\n        {arrayOption.map((number, index) => (\n          <option key={`${number} + index`} value={index + 1}>\n            {number}\n          </option>\n        ))}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  takeChildrenState: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport Select from '../Select/Select';\n\nclass GoodsList extends React.PureComponent {\n  state = {\n    sortBy: 'id',\n    isReverse: false,\n    maxGoodsLength: 1,\n  }\n\n  takeChildrenState = (steteResult) => {\n    this.setState({ maxGoodsLength: steteResult });\n  }\n\n  reverseGoods = () => {\n    this.setState(state => ({ isReverse: !state.isReverse }));\n  }\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  sortByABC = () => {\n    this.setState({ sortBy: 'ABC' });\n  }\n\n  clearGoods = () => {\n    this.setState({\n      isReverse: false,\n      sortBy: '',\n    });\n  }\n\n  render() {\n    const { allGoods } = this.props;\n\n    const newArrayOfGoods = allGoods.filter(goods => (\n      goods.length > this.state.maxGoodsLength\n    ));\n\n    newArrayOfGoods.sort((firsGoods, nextGoods) => {\n      switch (this.state.sortBy) {\n        case 'length':\n          return firsGoods.length - nextGoods.length;\n        case 'ABC':\n          return firsGoods.localeCompare(nextGoods);\n        default: return 0;\n      }\n    });\n\n    if (this.state.isReverse) {\n      newArrayOfGoods.reverse();\n    }\n\n    return (\n      <>\n        <ul>\n          {newArrayOfGoods.map(good => <li key={good}>{good}</li>)}\n        </ul>\n        <Button action={this.sortByLength} text=\"Sort by length\" />\n        <Button action={this.sortByABC} text=\"Sort by Name\" />\n        <Button action={this.clearGoods} text=\"Clear\" />\n        <Button action={this.reverseGoods} text=\"Reverse\" />\n        <Select maxGoodsLength={this.state.maxGoodsLength} takeChildrenState={this.takeChildrenState} />\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  allGoods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default GoodsList;\n","\nimport React from 'react';\nimport './App.css';\nimport GoodsList from './Components/GoodList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isActive: false,\n    allGoods: [...goodsFromServer],\n  }\n\n  showUI = () => {\n    this.setState(state => ({ isActive: !state.isActive }));\n  }\n\n  render() {\n    const { isActive, allGoods, sortBy, cleanGoods } = this.state;\n\n    return (\n      <>\n        {!isActive\n          && <button type=\"button\" onClick={this.showUI}>Start</button>}\n        {isActive\n          && (\n          <GoodsList\n            allGoods={allGoods}\n            sortBy={sortBy}\n            cleanGoods={cleanGoods}\n          />\n          )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}