{"version":3,"sources":["Components/Button/Button.jsx","Components/Select/Select.jsx","Components/GoodList/GoodsList.jsx","App.js","index.js"],"names":["React","memo","action","text","type","onClick","Select","state","maxGoodsLength","arrayOption","i","push","this","props","isCleanActive","setState","takeChildrenState","name","value","onChange","event","target","map","number","index","key","PureComponent","GoodsList","sortBy","isReverse","steteResult","reverseGoods","sortByLength","sortByABC","clearGoods","newArrayOfGoods","allGoods","filter","goods","length","sort","firsGoods","nextGoods","localeCompare","reverse","good","goodsFromServer","App","isActive","showUI","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91695bb6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ action, text }) => (\n  <button type=\"button\" onClick={action}>{text}</button>\n);\n\nButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Button);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.PureComponent {\n  state = {\n    maxGoodsLength: 1,\n  }\n\n  render() {\n    const maxOption = 10;\n    const arrayOption = [];\n\n    for (let i = 1; i <= maxOption; i += 1) {\n      arrayOption.push(i);\n    }\n\n    if (this.props.isCleanActive === true) {\n      this.setState({ maxGoodsLength: 1 });\n      this.props.takeChildrenState(this.state.maxGoodsLength);\n    }\n\n    return (\n      <select\n        name=\"number\"\n        value={this.state.maxGoodsLength}\n        onChange={(event) => {\n          this.setState({ maxGoodsLength: +event.target.value },\n            () => this.props.takeChildrenState(this.state.maxGoodsLength));\n        }}\n      >\n        {arrayOption.map((number, index) => (\n          <option key={`${number} + index`} value={index + 1}>\n            {number}\n          </option>\n        ))}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  takeChildrenState: PropTypes.func.isRequired,\n  isCleanActive: PropTypes.bool.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport Select from '../Select/Select';\n\nclass GoodsList extends React.PureComponent {\n  state = {\n    sortBy: 'id',\n    isReverse: false,\n    maxGoodsLength: 1,\n    isCleanActive: false,\n  }\n\n  takeChildrenState = (steteResult) => {\n    this.setState({ maxGoodsLength: steteResult });\n  }\n\n  reverseGoods = () => {\n    this.setState(state => ({ isReverse: !state.isReverse }));\n  }\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  sortByABC = () => {\n    this.setState({ sortBy: 'ABC' });\n  }\n\n  clearGoods = () => {\n    this.setState({\n      isReverse: false,\n      sortBy: '',\n      maxGoodsLength: 1,\n      isCleanActive: true,\n    });\n  }\n\n  render() {\n    const { allGoods } = this.props;\n\n    const newArrayOfGoods = allGoods.filter(goods => (\n      goods.length > this.state.maxGoodsLength\n    ));\n\n    newArrayOfGoods.sort((firsGoods, nextGoods) => {\n      switch (this.state.sortBy) {\n        case 'length':\n          return firsGoods.length - nextGoods.length;\n        case 'ABC':\n          return firsGoods.localeCompare(nextGoods);\n        default: return 0;\n      }\n    });\n\n    if (this.state.isReverse) {\n      newArrayOfGoods.reverse();\n    }\n\n    return (\n      <>\n        <ul>\n          {newArrayOfGoods.map(good => <li key={good}>{good}</li>)}\n        </ul>\n        <Button action={this.sortByLength} text=\"Sort by length\" />\n        <Button action={this.sortByABC} text=\"Sort by Name\" />\n        <Button action={this.clearGoods} text=\"Clear\" />\n        <Button action={this.reverseGoods} text=\"Reverse\" />\n        <Select\n          maxGoodsLength={this.state.maxGoodsLength}\n          takeChildrenState={this.takeChildrenState}\n          clearGoods={this.clearGoods}\n          isCleanActive={this.state.isCleanActive}\n        />\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  allGoods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default GoodsList;\n","\nimport React from 'react';\nimport './App.css';\nimport GoodsList from './Components/GoodList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isActive: false,\n    allGoods: [...goodsFromServer],\n  }\n\n  showUI = () => {\n    this.setState(state => ({ isActive: !state.isActive }));\n  }\n\n  render() {\n    const { isActive, allGoods } = this.state;\n\n    return (\n      <>\n        {!isActive\n          && <button type=\"button\" onClick={this.showUI}>Start</button>}\n        {isActive\n          && (\n          <GoodsList\n            allGoods={allGoods}\n          />\n          )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}